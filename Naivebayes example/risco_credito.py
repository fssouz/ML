# -*- coding: utf-8 -*-
"""risco_credito.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oFwfM37W9XiJcdI7BOq9F-PpR6YTIZNA
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import plotly.express as px

#Naive bayes

"""
abordagem probabilísitca(Teorema de bayes)

ex:filtros de spam, mineração de emoçoes, separação de documentos
"""

base_risco_credito = pd.read_csv('/content/sample_data/risco_credito.csv')

base_risco_credito

X_risco_credito = base_risco_credito.iloc[:, 0:4].values
X_risco_credito

Y_risco_credito = base_risco_credito.iloc[:, 4].values
Y_risco_credito

from sklearn.preprocessing import LabelEncoder
label_encoder_historia = LabelEncoder()
label_encoder_divida = LabelEncoder()
label_encoder_garantia = LabelEncoder()
label_encoder_renda = LabelEncoder()

X_risco_credito[:,0] = label_encoder_historia.fit_transform(X_risco_credito[:,0])
X_risco_credito[:,1] = label_encoder_divida.fit_transform(X_risco_credito[:,1])
X_risco_credito[:,2] = label_encoder_garantia.fit_transform(X_risco_credito[:,2])
X_risco_credito[:,3] = label_encoder_renda.fit_transform(X_risco_credito[:,3])

X_risco_credito

with open('risco_credito.pkl', mode = 'wb' ) as f:
  pickle.dump([X_risco_credito, Y_risco_credito], f)

from sklearn.naive_bayes import GaussianNB
naive_risco_credito = GaussianNB()

naive_risco_credito.fit(X_risco_credito, Y_risco_credito)

#previsão
#boa 0, alta 0, nenhuma 1, >35 2
#ruim 2, alta 0, adequada 0, <15 0

previsao = naive_risco_credito.predict([[0,0,1,2], [2,0,0,0]])
previsao

#quantidade de registros
naive_risco_credito.class_count_
#6 alto, 5 moderado, 3 baixo

naive_risco_credito.class_prior_